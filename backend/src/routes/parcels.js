import { Router } from 'express';
import { prisma } from '../prismaClient.js';
import { z } from 'zod';
import { idParam, validate, asyncHandler } from '../utils.js';
const r = Router();
const schema = z.object({ name: z.string().min(1), location: z.string().optional(), isActive: z.boolean().optional() });
r.get('/', asyncHandler(async (_req, res)=>{ const items = await prisma.parcel.findMany({ orderBy: { id: 'desc' } }); res.json(items); }));
r.get('/:id', asyncHandler(async (req, res)=>{ const { id } = validate(idParam, req.params); const item = await prisma.parcel.findUnique({ where: { id } }); if(!item) return res.status(404).json({ message: 'parcel not found' }); res.json(item); }));
r.post('/', asyncHandler(async (req, res)=>{ const data = validate(schema, req.body); const created = await prisma.parcel.create({ data }); res.status(201).json(created); }));
r.put('/:id', asyncHandler(async (req, res)=>{ const { id } = validate(idParam, req.params); const data = validate(schema.partial(), req.body); const updated = await prisma.parcel.update({ where: { id }, data }); res.json(updated); }));
r.delete('/:id', asyncHandler(async (req, res)=>{ const { id } = validate(idParam, req.params); await prisma.parcel.delete({ where: { id } }); res.status(204).end(); }));
export default r;
